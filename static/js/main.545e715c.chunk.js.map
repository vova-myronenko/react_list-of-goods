{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","goods","isClicked","isReversed","isSorted","sortBy","reverse","setState","sortByAlphabet","sortByLength","reset","this","goodsForDisply","sort","a","b","localeCompare","length","className","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAsGaC,E,4MAlGbC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,OAAQ,I,EAGVC,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBK,eAAiB,WACf,EAAKD,SAAS,CACZH,UAAU,EACVC,OAAQ,c,EAIZI,aAAe,WACb,EAAKF,SAAS,CACZH,UAAU,EACVC,OAAQ,Y,EAIZK,MAAQ,WACN,EAAKH,SAAS,CACZJ,YAAY,EACZC,UAAU,K,4CAKd,WAAU,IAAD,OACP,EAA0DO,KAAKX,MAAvDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,SAASC,EAA/C,EAA+CA,OACzCO,EAAc,YAAOX,GAqB3B,OAnBIG,GACFQ,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQV,GACN,IAAK,WACH,OAAOS,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXd,GACFS,EAAeN,UAIf,yBAAKY,UAAU,OACb,qCACChB,EAEC,oCACE,4BAAQiB,QAASR,KAAKL,SAAtB,WAGA,4BAAQa,QAASR,KAAKH,gBAAtB,uBAGA,4BAAQW,QAASR,KAAKF,cAAtB,kBAGA,4BAAQU,QAASR,KAAKD,OAAtB,SAGA,4BACCE,EAAeQ,KAAI,SAAAC,GAAI,OACtB,4BACGA,QAMP,4BAAQF,QAAS,kBAAM,EAAKZ,SAAS,CACnCL,WAAW,MADb,c,GAvFQoB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.545e715c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    isClicked: false,\n    isReversed: false,\n    isSorted: false,\n    sortBy: '',\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      isSorted: true,\n      sortBy: 'alphabet',\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      isSorted: true,\n      sortBy: 'length',\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      isSorted: false,\n    });\n  };\n\n\n  render() {\n    const { goods, isClicked, isReversed, isSorted,sortBy } = this.state;\n    const goodsForDisply = [...goods];\n\n    if (isSorted) {\n      goodsForDisply.sort((a, b) => {\n        switch (sortBy) {\n          case 'alphabet':\n            return a.localeCompare(b);\n          \n          case 'length':\n            return a.length - b.length;\n        \n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      goodsForDisply.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isClicked \n          ? (\n          <>\n            <button onClick={this.reverse}>\n              Reverse\n            </button>\n            <button onClick={this.sortByAlphabet}>\n              Sort alphabetically\n            </button>\n            <button onClick={this.sortByLength}>\n              Sort by length\n            </button>\n            <button onClick={this.reset}>\n              Reset\n            </button>\n            <ul>\n            {goodsForDisply.map(good => (\n              <li>\n                {good}\n              </li>\n            ))}\n            </ul>\n          </>\n        ) : (\n          <button onClick={() => this.setState({\n            isClicked: true,\n          })}>\n            Start\n          </button>\n        )\n        }\n    </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}